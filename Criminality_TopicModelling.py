# -*- coding: utf-8 -*-
"""Jurnal-kejahatan-sinta3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MBLdX0-ta7W19ppTHy99MpWJBTYl2uLE

# Topic Modelling with LDA & LSA approach with Criminalitas in indonesia

## Import library
"""

!pip install arxiv pyLDAvis unidecode gensim sastrawi

!pip uninstall numpy

!pip install numpy

!pip install Sastrawi

!pip install wordcloud

import arxiv
import string
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import pyLDAvis
import nltk
from typing import List
from wordcloud import WordCloud
from gensim import models, corpora
from collections import Counter
from sklearn.feature_extraction.text import TfidfVectorizer
from Sastrawi.StopWordRemover.StopWordRemoverFactory import StopWordRemoverFactory
from Sastrawi.Stemmer.StemmerFactory import StemmerFactory
# from nltk.corpus import stopwords
nltk.download('punkt')
# nltk.download('stopwords')

"""## Load dataset"""

import pandas as pd
data = pd.read_excel('kejahatanRiset-noDuplicat.xlsx')

data

"""## Stopword and Stemming"""

# Initialize the stopword remover and stemmer
stopword_remover_factory = StopWordRemoverFactory()
stopword_remover = stopword_remover_factory.create_stop_word_remover()

stemmer_factory = StemmerFactory()
stemmer = stemmer_factory.create_stemmer()

# Define a function to remove stopwords and perform stemming
def preprocess_text(text):
    # Remove stopwords
    text = stopword_remover.remove(text)
    # Perform stemming
    text = stemmer.stem(text)
    return text

# Apply the preprocessing function to the 'body' column
data['cleaned_body'] = data['body'].apply(preprocess_text)

data['cleaned_body'].values[:5]

"""## Exploratory Data Analysis

Topic Visualisation In dataset
"""

import pandas as pd
from wordcloud import WordCloud
import matplotlib.pyplot as plt

# Assuming your data is stored in a variable called 'data'
df = pd.DataFrame(data)

# Concatenate all the text from the 'cleaned_body' column
all_text = ' '.join(df['cleaned_body'].astype(str))

# Generate the word frequency analysis
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(all_text)

# Display the word cloud
plt.figure(figsize=(10, 6))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title('Word Cloud')
plt.show()

"""## Making corpus"""

# making among sentences --> words
article_summaries = data['cleaned_body'].values
article_summaries = [[word for word in nltk.word_tokenize(article)] for article in article_summaries]

# create a dictionary of all the words in the dataset
dictionary = corpora.Dictionary(article_summaries)

# create a corpus
corpus = [dictionary.doc2bow(article) for article in article_summaries]

"""transform text in matrix with TF-IDF"""

# creating TF-IDF in corpus
tfidf = models.TfidfModel(corpus)
corpus_tfidf = tfidf[corpus]

"""## Applying Algortihms

LDA Algorithm
"""

# create an LDA model
lda = models.LdaModel(corpus, id2word=dictionary, num_topics=10, passes=10)
corpus_lda = lda[corpus_tfidf]

lda.print_topics(10)

for topic_id, topic_words in lda.show_topics(num_topics=10, num_words=10, formatted=False):
    print(f"Topic #{topic_id}: {[word[0] for word in topic_words]}")

"""LSA Algorithm"""

# create an LSA model
lsa = models.LsiModel(corpus, id2word=dictionary, num_topics=10)
corpus_lsa = lsa[corpus_tfidf]

lsa.print_topics(10)

for topic_id, topic_words in lsa.show_topics(num_topics=10, num_words=5, formatted=False):
    print(f"Topic #{topic_id}: {[word[0] for word in topic_words]}")

"""## Evaluate models

Looping for find the best num_topics for LDA
"""

# Specify the initial number of topics
num_topics = 5

# Loop for multiple iterations
while num_topics <= 30:
    # Create an LDA model
    lda = models.LdaModel(corpus, id2word=dictionary, num_topics=num_topics, passes=10)
    corpus_lda = lda[corpus_tfidf]

    # Calculate coherence score
    coherence_model_lda = models.CoherenceModel(
        model=lda,
        texts=article_summaries,
        dictionary=dictionary,
        coherence='c_v'
    )
    coherence_score = coherence_model_lda.get_coherence()
    print(f"Number of Topics: {num_topics}")
    print(f"Coherence Score: {coherence_score}")
    print("---")

    # Check if num_topics exceeds 30, and break the loop if it does
    if num_topics >= 30:
        break

    # Increment the number of topics by 5 for the next iteration
    num_topics += 5

"""Looping for find the best num_topics for LSA"""

# Specify the initial number of topics
num_topics = 5

# Loop for multiple iterations
while num_topics <= 30:
    # Create an lsa model
    lsa = models.LsiModel(corpus, id2word=dictionary, num_topics=10)
    corpus_lsa = lsa[corpus_tfidf]

    # Calculate coherence score
    coherence_model_lsa = models.CoherenceModel(
        model=lsa,
        texts=article_summaries,
        dictionary=dictionary,
        coherence='c_v'
    )
    coherence_score = coherence_model_lsa.get_coherence()
    print(f"Number of Topics: {num_topics}")
    print(f"Coherence Score: {coherence_score}")
    print("---")

    # Check if num_topics exceeds 30, and break the loop if it does
    if num_topics >= 30:
        break

    # Increment the number of topics by 5 for the next iteration
    num_topics += 5

"""## Visualisation model"""

pip install pyLDAvis --upgrade

"""LDA"""

import pyLDAvis.gensim

lda_vis = pyLDAvis.gensim.prepare(
    lda,
    corpus,
    dictionary=lda.id2word,
    mds='mmds',
    sort_topics=False
)

pyLDAvis.display(lda_vis)

from wordcloud import WordCloud

"""LDA model"""

def create_wordcloud(model: models.LdaModel, topic: int):
    text = {word: value for word, value in model.show_topic(topic, topn=50)}
    wc = WordCloud(
        background_color="white",
        max_words=100
    )
    wc.generate_from_frequencies(text)
    plt.clf()
    plt.imshow(wc, interpolation="bilinear")
    plt.axis("off")
    plt.title("Topic" + " "+ str(topic))
    plt.show()

for i in range (0,10):
    create_wordcloud(lda, topic=i)

# Iterate over each topic
for topic_id in range(lda.num_topics):
    # Get the top words and their probabilities for the current topic
    topic_words = lda.show_topic(topic_id, topn=30)
    topic_words_dict = {word: prob for word, prob in topic_words}

    # Create a word cloud for the topic
    wordcloud = WordCloud(width=800, height=400, background_color='white').generate_from_frequencies(topic_words_dict)

    # Display the word cloud
    plt.figure(figsize=(10, 6))
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt.title(f'Topic {topic_id + 1} Word Cloud')
    plt.show()

"""LSA"""

def create_wordcloud(model: models.LsiModel, topic: int):
    text = {word: value for word, value in model.show_topic(topic, topn=50)}
    wc = WordCloud(
        background_color="white",
        max_words=100
    )
    wc.generate_from_frequencies(text)
    plt.clf()
    plt.imshow(wc, interpolation="bilinear")
    plt.axis("off")
    plt.title("Topic" + " "+ str(topic))
    plt.show()

for i in range (0,10):
    create_wordcloud(lsa, topic=i)

"""## Experiments model"""

from gensim.utils import simple_preprocess
from gensim.corpora import Dictionary

# preprocess the new document
new_doc = """Kebakaran hutan dan lahan sudah menyebar berbagai kabupaten dan kota di Riau. Berdasarkan rekapitulasi karhutla dari Kepala Pelaksana Badan Penanggulangan Bencana Daerah (BPBD) Riau, M Edy Afrizal, luasan melebihi 1.000 hektar.
Sebaran karhutla cukup cepat. Minggu terakhir Maret lalu, ketika Gubernur Syamsuar menetapkan status siaga darurat karhutla, luas baru 168,66 hektar. Kini, setengah dari 12 kabupaten dan kota di Riau menetapkan status siaga darurat.
Setelah Bengkalis dan Kepulauan Meranti—yang jadi acuan Pemerintah Riau menetapkan status siaga darurat karhutla—menyusul Pelalawan, Siak, Kampar, Indragiri Hilir dan Rokan Hulu.
Kabupaten Rokan Hilir termasuk wilayah dengan kebakaran cukup luas namun belum menetapkan status siaga darurat seperti kabupaten lain.Hari Dharma Putra, Kepala Pelaksana BPBD Rokan Hilir, mengatakan, status siaga darurat karhutla yang ditetapkan provinsi sudah cukup karena berlaku untuk seluruh wilayah.
Minggu lalu, Edy Afrizal mengirim Tim Satuan Reaksi Cepat Penanggulangan Bencana (SRC-PB) di Rokan Hilir dengan dilengkapi berbagai peralatan pemadam kebakaran. Saat ini, katanya, tim masih berjibaku memadamkan api baik lewat darat maupun bom air dari udara.
“Muncul titik api baru, setelah titik api sebelumnya dipadamkan,” kata Edy, dihubungi, 19 Juli lalu. Saat bersamaan, tim juga sempat memadamkan api di Kota Dumai, tetapi sudah selesai teratasi.
Kebakaran di Rokan Hilir terjadi beberapa hari sebelum tim terjun membantu Satgas Karhutla di daerah. BNPB sempat merilis kejadian pada 10 Juli. Luas kebakaran 27 hektar tersebar di empat kecamatan, Sinaboi, Rimba Melintang, Kubu dan Pasir Limau Kapas.
Asap karhutla di Pasir Limau Kapas, tepatnya di Kepenghuluan Panipahan Laut, salah satu titik kebakaran yang diumumkan BNPB sempat menyelimuti kepenghuluan sebelahnya, Panipahan Darat
Selama beberapa hari, sore jelang malam hingga pagi, bau asap tipis menyengat di hidung. Bahkan, kadang tercium di dalam ruma
“Semalam sudah berhasil kami padamkan titik kebakaran terakhir. Kami masih berjaga-jaga bersama Babinsa dan Bhabinkamtibmas,” kata Penghulu Panipahan Laut, Mustari, 20 Juli lalu.
Kebakaran, katanya, di lahan masyarakat, Jalan Telaga Suka dan Mujahidin. Tahun ini, sudah dua kali kebakaran lahan. Belum ada hujan di wilayah itu.
Saat ini, kebakaran di Rokan Hilir juga meluas di Kecamatan Bangko, tepatnya di Kepenghuluan Labuhan Tangga Besar dan Labuhan Tangga Hilir. Areal terbakar berupa semak dan sebagian sawit di gambut dalam. Tim pemadam kesulitan mencari sumber air, diperparah cuaca panas dan angin kencang.
“Permasalahan karhutla ini tak jauh-jauh dari pembukaan lahan. Kalau ini bencana, oke. Tapi kalau disengaja, terus ditanam sawit, sakit rasanya,” kata Hari Dharma Putra, saat dihubungi, 20 Juli.
Hari mendesak penegakan hukum.
Luas kebakaran di Rokan Hililebih 100 hektar. Dalam waktu dekat, Musabaqah Tilawatil Quran (MTQ) ke 40 tingkat provinsi akan diselenggarakan di Bagansiapiapi, pusat pemerintahan kabupaten itu.
Wakil Bupati Sulaiman, mengatakan tim Satgas bergerak terus tiap hari memadamkan api. “Saya ingin pokoknya selesaikan karhutla. Pak Bupati dalam tiap rapat juga minta karhutla harus bisa teratasi jelang pelaksanaan MTQ.”
Tim dari Pekanbaru dan Dumai bahkan Satuan Polisi Pamong Praja turut membantu pemadaman. Titik api hilang timbul. Cuaca cukup panas. Tak ada hujan dan kering. “Pening nih. Selain hutan, air pun tak ada lagi. Dapat laporan dari anggota kebakaran juga terjadi di lahan perusahaan. Tapi kita belum pastikan,” kata Sulaiman.Berdasarkan prakiraan cuaca dan hotspot yang saban hari dirilis Badan Meteorologi, Klimatologi dan Geofisika (BMKG) Pekanbaru, Rokan Hilir sangat minim potensi hujan dalam beberapa minggu terakhir. Akibatnya titik panas pun paling banyak bermunculan di wilayah itu.
Marzuki, Koordinator Bidang Data dan Informasi BMKG Pekanbaru, mengatakan, saat ini seluruh wilayah Riau memasuki musim kemarau. Tingkat kekeringan di Rokan Hilir, sebelumnya juga terjadi di wilayah lain. Secara bergantian dan berpindah-pindah dari Rokan Hulu ke Kampar terlebih dahulu.
“Kontribusi dan distribusi curah hujan tidak sama. Sifatnya juga tidak merata. Memang akan terjadi pengurangan curah hujan. Prediksi kami, memang wilayah Riau puncak musim kering bergantian,” katanya via telepon, 20 Juli.
Kondisi itu sejalan dengan informasi iklim dasarian II Juli 2022 di Riau yang dirilis Kepala Stasiun Klimatologi Kampar, Ayi Sudrajat, yang diterima Mongabay melalui WhatApps Grup, hari yang sama.
Berdasarkan peta monitoring hari tanpa hujan, Rokan Hilir masuk kategori menengah dan panjang yang berlangsung 11 sampai 20 hari. Curah hujan juga tergolong rendah antara 0-50 milimeter.
Tahun ini, BMKG Pekanbaru perkirakan musim hujan dan kemarau di wiilayah Riau kategori normal. Saat musim kemarau tahun ini tak terlalu kering karena fenomena la-nina lemah.
Walau musim kemarau, Riau masih berpotensi hujan ringan sampai sedang. Tipe iklim itu karena dipengaruhi letak wilayah Riau pada garis ekuatorial.
BMKG Pekanbaru memprediksi kemarau sejak Mei lalu. Puncaknya Juni dan Juli. Agustus, masih kategori kemarau. September, peralihan menuju musim penghujan. Oktober, sebagian besar wilayah Riau sudah masuk musim penghujan, tetapi masih ada wilayah dalam masa transisi kemarau ke penghujan.
“Terjadi transisi secara bertahap mulai September sampai Oktober. Terutama disebagian wilayah Indragiri Hulu dan Indragiri Hilir. Mungkin akhir Oktober baru masuk musim penghujan,” kata Marzuki.
Untuk antisipasi karhutla, BMKG Pekanbaru terus beri informasi kondisi cuaca harian berikut analisis curah hujan dan hari tanpa hujan tiap-tiap daerah.
Marzuki bilang, dinamika atmosfir selalu berubah-ubah karena itu mereka terus memantau.
Tim Satgas juga terus mengendalikan karhutla. Edy mengatakan, juga dilakukan teknologi modifikasi cuaca (TMC) untuk mencegah kebakaran meluas. Wilayah dengan potensi awan yang menghasilkan curah hujan akan semai dengan garam.
Saat ini, dua heli water boombing dan 1satu patroli dari Kementerian Lingkungan Hidup dan Kehutanan (KLHK) dan BNPB, terus mengudara."""
new_doc_tokens = simple_preprocess(new_doc)
new_doc_bow = dictionary.doc2bow(new_doc_tokens)

# infer the topic distribution for the new document
new_doc_topics = lda.get_document_topics(new_doc_bow)
print(new_doc_topics)